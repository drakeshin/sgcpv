/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgcvp;

import com.sun.xml.internal.ws.util.StringUtils;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import opcoes.Pesquisar;
import opcoes.SelectAdc;
import sistema.Config;

/**
 *
 * @author designbrindes
 */
public class Main extends javax.swing.JFrame {
    /**
     * Vars Area
     */
    private Properties prop;
    private Config shandler;
    public boolean checkedID;
    SelectAdc selecF;
    private BufferedReader breader;
    private BufferedWriter bwriter;
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myTab = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaVendas = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaClientes = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaOrcamentos = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        fornecTable = new javax.swing.JTable();
        delItem = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SGCVP");
        setMinimumSize(new java.awt.Dimension(566, 416));

        myTab.setDoubleBuffered(true);

        tabelaVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CLIENTE", "PRODUTO", "DATA", "VENDEDOR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaVendas.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaVendasAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tabelaVendas);

        myTab.addTab("Vendas", jScrollPane1);

        tabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME/RAZÃO SOCIAL", "CPF/CNPJ", "RG", "DATA NASCIMENTO/CRIAÇÃO", "IE", "IM", "CEP", "ENDEREÇO", "NÚMERO", "TELEFONE", "CELULAR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaClientes.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaClientesAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(tabelaClientes);

        myTab.addTab("Clientes", jScrollPane2);

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PRODUTO", "QUANTIDADE", "VALIDADE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdutos.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaProdutosAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane3.setViewportView(tabelaProdutos);

        myTab.addTab("Produtos", jScrollPane3);

        tabelaOrcamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CLIENTE", "PRODUTO", "QUANTIDADE TOTAL", "DATA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaOrcamentos.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaOrcamentosAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane4.setViewportView(tabelaOrcamentos);

        myTab.addTab("Orçamentos", jScrollPane4);

        fornecTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME/RAZÃO SOCIAL", "CPF/CNPJ", "IE", "IM", "ENDEREÇO", "CEP", "NÚMERO", "TELEFONE 1", "TELEFONE 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fornecTable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                fornecTableAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane5.setViewportView(fornecTable);

        myTab.addTab("Fornecedores", jScrollPane5);

        delItem.setText("Deletar Item");
        delItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delItemActionPerformed(evt);
            }
        });

        jButton1.setText("Visualizar Item");

        jButton2.setText("Adicionar Item");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("Arquivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Abrir Tabela");
        jMenuItem1.setToolTipText("");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Salvar");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Salvar Como");
        jMenu1.add(jMenuItem3);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Pesquisar ");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delItem)
                .addContainerGap())
            .addComponent(myTab, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delItem)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(myTab, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /***
     * Menu Action
     * @param evt 
     */
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        Pesquisar pForm = new Pesquisar();
        pForm.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed
    /**
     * Table Update Event
     * @param evt 
     */
    private void tabelaVendasAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaVendasAncestorAdded
        //Set the file + path's file
        String path = System.getProperty("user.home") + File.separator + "Documents" + File.separator + "SGVPC - System" + File.separator;
        File arquivo = new File(path+"sellControl.data");
        try {
            
            //use the defaul model to "update" information
            DefaultTableModel model = (DefaultTableModel) tabelaVendas.getModel();
            if (model.getRowCount() > 0){
                model.setRowCount(0);
            }
            
            //just something to user the file
            FileInputStream fis = new FileInputStream(arquivo);
            InputStreamReader isr = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(isr);
            
            //read all the file
            
            BufferedReader txtReader = new BufferedReader(br);
            String txt = br.readLine();
            
            
            //the the information split by ";" to show in the table
            while(txt != null){
                
                Object[] obj = txt.split(";");
                
                model.addRow(obj);
                txt = br.readLine();
            }
            
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro");
        }
    }//GEN-LAST:event_tabelaVendasAncestorAdded

    private void tabelaClientesAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaClientesAncestorAdded
        //Set the file + path's file
        String path = System.getProperty("user.home") + File.separator + "Documents" + File.separator + "SGVPC - System" + File.separator;
        File arquivo = new File(path+"clientControl.data");
        try {
            //Load the properties file
            prop = shandler.loadSell();
            //use the defaul model to "update" information
            DefaultTableModel model = (DefaultTableModel) tabelaClientes.getModel();
            if (model.getRowCount() > 0){
                model.setRowCount(0);
            }
            
            //just something to user the file
            FileInputStream fis = new FileInputStream(arquivo);
            InputStreamReader isr = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(isr);
            
            //read all the file
            String line = br.readLine();
            //the the information split by ";" to show in the table
            while(line != null){
                Object[] obj = line.split(";");
                model.addRow(obj);
                line = br.readLine();
            }
            
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro");
        }
    }//GEN-LAST:event_tabelaClientesAncestorAdded

    private void tabelaProdutosAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaProdutosAncestorAdded
        String path = System.getProperty("user.home") + File.separator + "Documents" + File.separator + "SGVPC - System" + File.separator;
        File arquivo = new File(path+"productControl.data");
        try {
            // Load the properties file
            prop = shandler.loadProduct();
            //use the defaul model to "update" information
            DefaultTableModel model = (DefaultTableModel) tabelaProdutos.getModel();
            if (model.getRowCount() > 0){
                model.setRowCount(0);
            }
            
            //just something to user the file
            FileInputStream fis = new FileInputStream(arquivo);
            InputStreamReader isr = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(isr);
            
            //read all the file
            String line = br.readLine();
            //the the information split by ";" to show in the table
            while(line != null){
                Object[] obj = line.split(";");
                model.addRow(obj);
                line = br.readLine();
            }
            //tabelaVendas.revalidate();
            //tabelaVendas.repaint();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro");
        }
    }//GEN-LAST:event_tabelaProdutosAncestorAdded

    private void tabelaOrcamentosAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaOrcamentosAncestorAdded
        String path = System.getProperty("user.home") + File.separator + "Documents" + File.separator + "SGVPC - System" + File.separator;
        File arquivo = new File(path+"budgetControl.data");
        try {
            // Load the properties file
            prop = shandler.loadOrcamentos();
            //use the defaul model to "update" information
            DefaultTableModel model = (DefaultTableModel) tabelaOrcamentos.getModel();
            if (model.getRowCount() > 0){
                model.setRowCount(0);
            }
            
            //just something to user the file
            FileInputStream fis = new FileInputStream(arquivo);
            InputStreamReader isr = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(isr);
            
            //read all the file
            String line = br.readLine();
            //the the information split by ";" to show in the table
            while(line != null){
                Object[] obj = line.split(";");
                model.addRow(obj);
                line = br.readLine();
            }
            //tabelaVendas.revalidate();
            //tabelaVendas.repaint();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro");
        }
    }//GEN-LAST:event_tabelaOrcamentosAncestorAdded
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        //vadcF.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        selecF = new SelectAdc();
        selecF.setVisible(true);
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void fornecTableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_fornecTableAncestorAdded
        // TODO add your handling code here:
        String path = System.getProperty("user.home") + File.separator + "Documents" + File.separator + "SGVPC - System" + File.separator;
        File arquivo = new File(path+"fornecControl.data");
        try {
            // Load the properties file
            prop = shandler.loadFornecedores();
            //use the defaul model to "update" information
            DefaultTableModel model = (DefaultTableModel) fornecTable.getModel();
            if (model.getRowCount() > 0){
                model.setRowCount(0);
            }
            
            //just something to user the file
            FileInputStream fis = new FileInputStream(arquivo);
            InputStreamReader isr = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(isr);
            
            //read all the file
            String line = br.readLine();
            //the the information split by ";" to show in the table
            while(line != null){
                Object[] obj = line.split(";");
                model.addRow(obj);
                line = br.readLine();
            }
            //tabelaVendas.revalidate();
            //tabelaVendas.repaint();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro");
        }
    }//GEN-LAST:event_fornecTableAncestorAdded
    
    /**
     * Delet Itens
     * 
     * @param evt 
     */
    
    private void delItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delItemActionPerformed
        if(tabelaVendas.getSelectedRow() != -1){
            DefaultTableModel model = (DefaultTableModel) tabelaVendas.getModel();
            model.removeRow(tabelaVendas.getSelectedRow());
            String path = System.getProperty("user.home") + File.separator + "Documents" + File.separator + "SGVPC - System" + File.separator;
            File file = new File(path+"sellControl.data");
            try {
                FileWriter fwriter = new FileWriter(file, true);//BUG
                breader = new BufferedReader(new FileReader(file));//BUG
                bwriter = new BufferedWriter(fwriter);//BUG
                
                int lineRemove = tabelaVendas.getSelectedRow();//BUG
                String currentLine;//BUG
                // BUG GERAL POR AQUI, BELÉ?
                while((currentLine = breader.readLine()) != null){
                   if((currentLine.trim()).equals(lineRemove)) continue;
                   currentLine ="";
                   bwriter.write(currentLine + System.getProperty("line.separator"));
                }
                bwriter.close();
                breader.close();
           
            } catch (IOException ex) {
               
            }
        }
    }//GEN-LAST:event_delItemActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delItem;
    private javax.swing.JTable fornecTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane myTab;
    private javax.swing.JTable tabelaClientes;
    private javax.swing.JTable tabelaOrcamentos;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JTable tabelaVendas;
    // End of variables declaration//GEN-END:variables
}
